<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>EHui&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-09-23T01:45:33.931Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>EHui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>合并二叉树</title>
    <link href="http://example.com/2020/09/23/%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://example.com/2020/09/23/%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2020-09-23T09:31:05.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="合并二叉树"><a href="#合并二叉树" class="headerlink" title="合并二叉树"></a>合并二叉树</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>合并两个二叉树，对应结点若存在则结点的值变为两者之和，若一方不存在则拼接。</p><p>例：<img src="/images/20092301.jpg"></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>将t2合并到t1上，使用递归实现先序遍历。</p><p>base case：t1、t2都不为空，则t1-&gt;val += t2-&gt;val，t1为空t2不空，则直接t1=t2（在传入引用参数类型的前提）</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>思考不是一帆风顺的。我觉得源头在于我思考，解决问题的一个弊病。就是不去清晰地分析，简单的想当然，脑中有想法就立即实现。就拿本题来说，就是当处理t1为空t2不空这种情况是我的第一想法就是需要父节点才能完成拼接，于是便开始了往这方向瞎折腾，浪费了许多时间，还没做出来。知道后面冷静下来，仔细一想，t1与t2就是两个指针，原理上只要将t2赋值给t1就ok，在加上参数的引用传递就行了。对于我来说，想要获得提升，这是亟待改善的问题。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;合并二叉树&quot;&gt;&lt;a href=&quot;#合并二叉树&quot; class=&quot;headerlink&quot; title=&quot;合并二叉树&quot;&gt;&lt;/a&gt;合并二叉树&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;合并两个二叉树，对应结点若存在则结点的值变为两者之和，若一方不存在则拼接。&lt;/p&gt;
&lt;p&gt;例：&lt;img src=&quot;/images/20092301.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="刷题日记" scheme="http://example.com/categories/%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="二叉树" scheme="http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
    <category term="思考" scheme="http://example.com/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>监控二叉树</title>
    <link href="http://example.com/2020/09/22/%E7%9B%91%E6%8E%A7%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://example.com/2020/09/22/%E7%9B%91%E6%8E%A7%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2020-09-22T15:06:54.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="监控二叉树"><a href="#监控二叉树" class="headerlink" title="监控二叉树"></a>监控二叉树</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个二叉树，在树节点上安装摄像头。<br>节点上的每个摄影头都可以监视<strong>其父对象、自身及其直接子对象。</strong><br>计算监控树的所有节点所需的最小摄像头数量。</p><p>例：</p><p><img src="/images/20092201.jpg"></p><p><img src="/images/20092202.jpg"></p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>分析题意得出一个二叉树中每个结点仅可获取其子结点的情况，便采取了从树的最下到最上安装摄像头的思路。思路不是最优。样例最终没有全部通过。</p><p>最终结果：<img src="/images/20092203.jpg"></p><p>其实是这个<img src="/images/20092204.jpg">，上面那个结果算法不完备导致歪打正着。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>以问题式的解题方法来解题似乎可以使效率提高。<br>考虑是否可以使用经典算法。（遍历算法如先序、中序、后序等等）<br>二叉树的题，递归程序考虑的点在于<strong>当前结点、左子结点、右子结点、父节点</strong>，这就是局部观的体现。<br>递归程序的写法：base case + 递归调用自身（以函数完成的功能来思考）</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;监控二叉树&quot;&gt;&lt;a href=&quot;#监控二叉树&quot; class=&quot;headerlink&quot; title=&quot;监控二叉树&quot;&gt;&lt;/a&gt;监控二叉树&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给定一个二叉树，在树节点上安装摄像头。&lt;br&gt;节点上的每个摄影头都可以监视&lt;strong&gt;其父对象、自身及其直接子对象。&lt;/strong&gt;&lt;br&gt;计算监控树的所有节点所需的最小摄像头数量。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/20092201.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/20092202.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="刷题日记" scheme="http://example.com/categories/%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="备赛" scheme="http://example.com/tags/%E5%A4%87%E8%B5%9B/"/>
    
    <category term="二叉树" scheme="http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>二叉搜索树</title>
    <link href="http://example.com/2020/09/21/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    <id>http://example.com/2020/09/21/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/</id>
    <published>2020-09-21T16:43:56.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二叉搜索树"><a href="#二叉搜索树" class="headerlink" title="二叉搜索树"></a>二叉搜索树</h1><p>二叉搜索树，<em>Binary Search Tree</em>。</p><p>定义：它要么是一颗空树，要么在其左子树不为空的情况下，左子树上所有结点的值均小于它的根节点的值，在其右子树不为空的情况下，右子树上所有节点的值均大于根结点。</p><p>特点：结点之间有大小顺序，有快速查找的优势。</p><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>将一个二叉搜索树变为累加树，即根节点等于其右子树所有结点的和，左节点等于根节点与右子树结点的和。</p><a id="more"></a><p>例:</p><p><img src="/images/bst.jpg"></p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="标准解法"><a href="#标准解法" class="headerlink" title="标准解法"></a>标准解法</h3><p>显然简单的解法就是中序遍历二叉搜索树。先遍历右节点其次根节点，最后左节点。</p><h3 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h3><p>递归实现。依次处理左节点、右节点。</p><p>代码模板为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">recursive</span><span class="params">(TreeNode* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p-&gt;right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!isLeafNode(p-&gt;right))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    <span class="keyword">if</span>(p-&gt;left)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(isLeafNode(p-&gt;right))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不是不可以做出来，但是很复杂，很多种情况需要考虑。依赖了样例的数据。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><ul><li>一定要看清楚题目，理解题目意思。可以自己人脑运行一下样例。</li><li>面对一种数据结构，比如二叉树，尽最大努力去利用它的特性。比如二叉搜索树的性质，很明显可以用中序遍历来解题。</li><li>写完程序，进行分支检查。覆盖每一个if语句和else语句。毕竟比赛中没那么多样例程序给你跑。</li><li>算法题还是吃一点经验的，所以多做还是有好处。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;二叉搜索树&quot;&gt;&lt;a href=&quot;#二叉搜索树&quot; class=&quot;headerlink&quot; title=&quot;二叉搜索树&quot;&gt;&lt;/a&gt;二叉搜索树&lt;/h1&gt;&lt;p&gt;二叉搜索树，&lt;em&gt;Binary Search Tree&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;定义：它要么是一颗空树，要么在其左子树不为空的情况下，左子树上所有结点的值均小于它的根节点的值，在其右子树不为空的情况下，右子树上所有节点的值均大于根结点。&lt;/p&gt;
&lt;p&gt;特点：结点之间有大小顺序，有快速查找的优势。&lt;/p&gt;
&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;将一个二叉搜索树变为累加树，即根节点等于其右子树所有结点的和，左节点等于根节点与右子树结点的和。&lt;/p&gt;</summary>
    
    
    
    <category term="刷题日记" scheme="http://example.com/categories/%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="二叉搜索树" scheme="http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="备赛" scheme="http://example.com/tags/%E5%A4%87%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>子集</title>
    <link href="http://example.com/2020/09/20/%E5%AD%90%E9%9B%86/"/>
    <id>http://example.com/2020/09/20/%E5%AD%90%E9%9B%86/</id>
    <published>2020-09-20T16:30:38.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="子集"><a href="#子集" class="headerlink" title="子集"></a>子集</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>问题描述：给定一个数组，求它的幂集。</p><p>例：[1,2] -&gt;[],[1],[2],[1,2]</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>看到这个题就想到了全排列的解法。即求数组给定元素的全排列然后进行“剪枝”，将冗余的解去除。</p><a id="more"></a><p>官方题解：</p><ul><li><p>采用二进制数组标记元素是否包含。<br>比如：[1,2] -&gt;[] = 00,[1]=01,[2]=10,[1,2]=11<br>这样仅需每次将一个元素对应的位置置1就得到一个解。</p></li><li><p>递归（回溯），每个元素都有取和没有被取的状态。因此程序结构如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; t;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur == n)</span><br><span class="line">        <span class="comment">//记录一个解</span></span><br><span class="line">    t.push_back(cur);<span class="comment">//先取cur</span></span><br><span class="line">    dfs(cur+<span class="number">1</span>, n, k);</span><br><span class="line">    t.pop_back();<span class="comment">//不取cur</span></span><br><span class="line">    dfs(cur+<span class="number">1</span>, n, k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>还是要多做，多总结。前天做的回溯，做了很久。但是熟悉了回溯算法。今天不到20min就做出来了。虽然解不是很优，走了弯路。这也反映了我做题的一个缺点，拿到题有一个解题思路就立马动手，而不是考虑一下最优解。这不太好。做提前养成思考多解的习惯。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;子集&quot;&gt;&lt;a href=&quot;#子集&quot; class=&quot;headerlink&quot; title=&quot;子集&quot;&gt;&lt;/a&gt;子集&lt;/h1&gt;&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;问题描述：给定一个数组，求它的幂集。&lt;/p&gt;
&lt;p&gt;例：[1,2] -&amp;gt;[],[1],[2],[1,2]&lt;/p&gt;
&lt;h2 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h2&gt;&lt;p&gt;看到这个题就想到了全排列的解法。即求数组给定元素的全排列然后进行“剪枝”，将冗余的解去除。&lt;/p&gt;</summary>
    
    
    
    <category term="刷题日记" scheme="http://example.com/categories/%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="备赛" scheme="http://example.com/tags/%E5%A4%87%E8%B5%9B/"/>
    
    <category term="回溯" scheme="http://example.com/tags/%E5%9B%9E%E6%BA%AF/"/>
    
  </entry>
  
  <entry>
    <title>左叶子</title>
    <link href="http://example.com/2020/09/19/%E5%B7%A6%E5%8F%B6%E5%AD%90/"/>
    <id>http://example.com/2020/09/19/%E5%B7%A6%E5%8F%B6%E5%AD%90/</id>
    <published>2020-09-19T15:44:55.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><p>递归，<em>recursive</em>。</p><p>递归程序的写法：</p><ul><li><p>写递归程序要有全局观和局部观。</p></li><li><p>全局观就是在函数中每次递归调用，就等同于完成了这个函数的功能。</p></li><li><p>局部观就是递归的尽头和递归的过程。</p></li></ul><p>步骤：首先要明确全局观，其次确定局部观。</p><a id="more"></a><h1 id="左叶子"><a href="#左叶子" class="headerlink" title="左叶子"></a>左叶子</h1><p>二叉树中如何遍历所有的左叶子。</p><p>基础知识：</p><ul><li><p>二叉树的遍历形式有先序，中序和后序遍历。<br>分类依据是根节点的访问顺序。</p></li><li><p>遍历的实现有两种形式，递归和迭代（需要用到栈和队列等数据结构）</p></li><li><p>左叶子：左右指针均为NULL，且有<strong>父节点</strong>的左指针指向。</p></li></ul><p>解题思路：可知左叶子与父节点有关，因此得从父节点入手。</p><p>采用递归的形式实现，递归函数的全局观是传入一个节点指针，判断其左节点是否是叶子节点，不是则继续访问其左节点。如果其右节点非空且非叶子节点则，访问其右节点。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>算法题其实不难，主要是思路要对。能熟练使用算法，理解算法，理解数据结构，可能是刷题最终的结果吧。</p><h1 id="备赛"><a href="#备赛" class="headerlink" title="备赛"></a>备赛</h1><p>写完程序不要先急着提交，想想特殊的测试用例，对程序改进完在进行提交。毕竟竞赛没那么机会给你提交。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;递归&quot;&gt;&lt;a href=&quot;#递归&quot; class=&quot;headerlink&quot; title=&quot;递归&quot;&gt;&lt;/a&gt;递归&lt;/h1&gt;&lt;p&gt;递归，&lt;em&gt;recursive&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;递归程序的写法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;写递归程序要有全局观和局部观。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;全局观就是在函数中每次递归调用，就等同于完成了这个函数的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;局部观就是递归的尽头和递归的过程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;步骤：首先要明确全局观，其次确定局部观。&lt;/p&gt;</summary>
    
    
    
    <category term="刷题日记" scheme="http://example.com/categories/%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="备赛" scheme="http://example.com/tags/%E5%A4%87%E8%B5%9B/"/>
    
    <category term="二叉树" scheme="http://example.com/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>折叠</title>
    <link href="http://example.com/2020/09/18/%E6%8A%98%E5%8F%A0/"/>
    <id>http://example.com/2020/09/18/%E6%8A%98%E5%8F%A0/</id>
    <published>2020-09-18T23:35:21.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="“北京”"><a href="#“北京”" class="headerlink" title="“北京”"></a>“北京”</h1><p>北京——中国首都，8000万人口居住的大城。为了更好地维持城市的运作，折叠成了三个空间。第一空间——人才的聚集地（有成就、有建树的人），第二空间——努力奋斗向上发展的人（有潜力的学生），第三空间——平凡群众（为了城市运作而默默耕耘的人）。500w人在第一空间享受着优越、高贵、富足的生活，并拥有控制城市运行的最高的权力。2500w人在第二空间，5000w人在第三空间。以两天为单位，500w人分配24小时，7500w人分配24小时。第一空间者在决策、在运营着整个城市，第二空间者在拼劲权力往第一空间挤，第三空间者做着最底层的工作，努力辛勤地工作，只是为了在这个大城市的角落生存，地位最低。</p><a id="more"></a><h1 id="故事"><a href="#故事" class="headerlink" title="故事"></a>故事</h1><p>主人公老刀，他的父亲亲手创建了这座城市，为了留在城市生活，好不容易找到了捡垃圾的工作，老刀也是努力地奋斗过，但以失败告终，最后老刀继承了父亲的工作，默默地为城市的运转贡献自己的力量，但是收入不乐观。故事从老刀去第一空间送信开始。老刀为了糖糖（收养的）能上<strong>普通</strong>的幼儿园，收到第二空间秦天的委托，冒着风险突破空间的限制去第一空间送信。老刀找到自己好友，按照好友的方法，非法进入了第一空间，在第一空间成功地将信件送达，同时体会了第一空间的生活。在回第三空间的过程中，遇险并遇到老葛，接触到了第一空间的领导者，同时顺利回家，完成了自己的任务。</p><hr><p>（9.19 凌晨）</p><h1 id="情节"><a href="#情节" class="headerlink" title="情节"></a>情节</h1><h3 id="老彭和老刀"><a href="#老彭和老刀" class="headerlink" title="老彭和老刀"></a>老彭和老刀</h3><p>老刀为了获取去第一空间的方法，去找了自己的老朋友老彭。老彭年近60，已经看穿了生活。他对老刀有过劝阻，但也明白迫于生活的无奈，于是对老刀欲言又止。最后看着老刀去第一空间。</p><p>老彭有“自知之明”，以前年轻时经常去第一空间获取钱财，以为这样就能过的和第一空间的人一样好，却发现日子过得还是很糟糕，甚至遭受过牢狱之灾。是第三空间的人，就得认这个命。然后对于像老刀这样的去探索第一空间的人，从他们身上看到了自己的影子，对于冒着危险又不得不去闯的人，老彭的想法或许就是只有去闯了才会明白。</p><h3 id="老刀与第二空间"><a href="#老刀与第二空间" class="headerlink" title="老刀与第二空间"></a>老刀与第二空间</h3><p>老刀接受了秦天的委约，前去第二空间。显然第二空间的生活条件是优于第三空间的。老刀第一次在偌大的厕所洗了澡，从洗澡的细节来看，老刀是一个正直、不喜欢亏欠别人的人。而秦天和其舍友都属于那种一心向往去第一空间生活的人，秦天想通过老刀去第三空间给自己的意中人送信，并表达自己的爱慕。</p><p>第二空间，在作者的笔下就只介绍了秦天的寝室几个人的情况。可以看出，第二空间多是知识分子，以学生为代表，都是那种想跻身于第一空间的人。</p><h3 id="第一空间"><a href="#第一空间" class="headerlink" title="第一空间"></a>第一空间</h3><p>第一空间并不像今日高楼大厦纵横交错的钢铁丛林。而是自然与人们和谐相处（毕竟垃圾都交给第三空间的劳工去处理了），人们生活富足，不再为钱而操劳，而是为生活操劳。像洛依这样的女人，上半天班仅仅为了有事可做，但仍然有许多烦恼，比如和秦天相遇。每个空间有每个空间的烦恼。</p><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>《北京折叠》，小说中北京的这种运营模式是否对城市发展有益处？我个人看来是有的，人才精尖化可以使管理高效。但是也反映出了许多问题。这种隔绝化管理，隔绝的是人与人之间的交流。很容易造成管理者的失衡。</p><p>这种折叠化的城市结构仿佛是当今社会的映射。在城市中，特别是一线城市。每年吸引很多的人来就业。但是最后能留在大城市里的又有多少呢？用流行的词汇来说的话就是“内卷”，能突破内卷的人似乎很少。内卷容易使奋斗者产生焦虑，我觉得这是当今社会亟待解决的问题之一。</p><hr><h4 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h4><p>第一次尝试写小说的读后感，以前看小说也就是图个乐，什么乐？情节的有趣。但是想想读完之后没有产生什么影响，便觉得有点亏。所以这次就想记录一下自己看完之后对书的印象。结果没想到，停停写写，花了可能有一个多甚至俩小时来写这篇文章了，在时间在又发现有点亏。所以以后还是只写写思考后的感想吧。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;“北京”&quot;&gt;&lt;a href=&quot;#“北京”&quot; class=&quot;headerlink&quot; title=&quot;“北京”&quot;&gt;&lt;/a&gt;“北京”&lt;/h1&gt;&lt;p&gt;北京——中国首都，8000万人口居住的大城。为了更好地维持城市的运作，折叠成了三个空间。第一空间——人才的聚集地（有成就、有建树的人），第二空间——努力奋斗向上发展的人（有潜力的学生），第三空间——平凡群众（为了城市运作而默默耕耘的人）。500w人在第一空间享受着优越、高贵、富足的生活，并拥有控制城市运行的最高的权力。2500w人在第二空间，5000w人在第三空间。以两天为单位，500w人分配24小时，7500w人分配24小时。第一空间者在决策、在运营着整个城市，第二空间者在拼劲权力往第一空间挤，第三空间者做着最底层的工作，努力辛勤地工作，只是为了在这个大城市的角落生存，地位最低。&lt;/p&gt;</summary>
    
    
    
    <category term="读后感" scheme="http://example.com/categories/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
    
    <category term="思考" scheme="http://example.com/tags/%E6%80%9D%E8%80%83/"/>
    
    <category term="小说读后感" scheme="http://example.com/tags/%E5%B0%8F%E8%AF%B4%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>OOP</title>
    <link href="http://example.com/2020/09/09/OOP/"/>
    <id>http://example.com/2020/09/09/OOP/</id>
    <published>2020-09-09T22:25:31.000Z</published>
    <updated>2020-09-23T01:45:33.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p>面向对象三个特征：封装、多态、继承。</p><p>Python的面向对象：</p><a id="more"></a><ul><li><p><em>Everything is Object.</em> 不同于Java和C++，Python没有内置类型，即int,float等都是对象。</p></li><li><p>类方法（Class Function）声明：方法的第一个参数为self（类比于Java里的this关键字）（相对于其他function）。</p></li><li><p>构造方法：定义<code>__init__</code>方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, xxx</span>):</span></span><br><span class="line">xxxx</span><br></pre></td></tr></table></figure></li><li><p>继承：构造方法子类需调用父类<code>__init__</code>方法。父类作为子类的参数（可以这么理解）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">SchoolMember</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;xxx&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>成员变量：在类定义里定义的变量为Class Variable。方法里定义的为Object Variable。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h1&gt;&lt;p&gt;面向对象三个特征：封装、多态、继承。&lt;/p&gt;
&lt;p&gt;Python的面向对象：&lt;/p&gt;</summary>
    
    
    
    <category term="With Python" scheme="http://example.com/categories/With-Python/"/>
    
    
    <category term="编程语言" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>诚</title>
    <link href="http://example.com/2020/09/09/%E8%AF%9A/"/>
    <id>http://example.com/2020/09/09/%E8%AF%9A/</id>
    <published>2020-09-09T09:04:30.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="人"><a href="#人" class="headerlink" title="人"></a>人</h1><p>诚，这个字衍生出很多词语。忠诚、诚实、诚意…在生活中耳熟能详的词语，却又是生活中最难实现的字眼。人生路途上的人际交往中，能有多少人能将<strong>诚</strong>这个字践行到底。对待友情、爱情，对待朋友、同学、亲人、伴侣，我们似乎总在隐藏、在掩盖，至少我是这样。</p><a id="more"></a><h2 id="一生独一"><a href="#一生独一" class="headerlink" title="一生独一"></a>一生独一</h2><p>对待爱情，说实话，我一直以来的态度都是——绝对忠诚。对待一生独一的爱人，我不会遮遮掩掩，因为开诚才能完全打开心扉，和你朝夕相处的人对你撒谎、甚至隐瞒，这是我无论如何都接受不了的。所以对待有些现实的时候，我逃避了。真不想去详细地了解，宁愿被欺骗一生，也不愿去接受。在换位思考一下，我已是如此，那其他人呢？。。。真的很难受。怎么安慰？我有些手足无措。站在我的角度上思考，为什么不能忠于爱情？对爱情的忠贞不渝就这么难做到吗？对待这两个问题，我无法回答。不管是现实，还是网络，事例还挺多的。我想可能这就是人吧，变幻莫测。</p><p>但无论如何，对于我来说，我的态度是一成不变的。我只希望我能践行自己的人生信条。走好自己的路，迎接自己的未来。</p><h2 id="交往"><a href="#交往" class="headerlink" title="交往"></a>交往</h2><p>在人际交往中，多一份诚实，多一份情。不管是朋友还是亲人。对你开诚布公的人，肯定是把你当成至亲、至友的人。所以好好珍惜身边的至亲、至友。关系就像是一堵墙，不同人和你之间的墙的厚度不一，而诚就是推倒墙的最后一击。或许有时候不能做到坦诚布公，但隔着墙或许能理解对方。我始终是一个喜欢用墙把自己围起来的人，我的心里其实有很多自己的想法，深深扎根于我的心中。至今还没有谁体会过。或许我在等待一个机会，或者在等待某一个人。</p><p><em>挣扎地写出了600字，其实心里酝酿了很久。写出来，心里舒畅了许多，只希望这次赶快过去。</em></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;人&quot;&gt;&lt;a href=&quot;#人&quot; class=&quot;headerlink&quot; title=&quot;人&quot;&gt;&lt;/a&gt;人&lt;/h1&gt;&lt;p&gt;诚，这个字衍生出很多词语。忠诚、诚实、诚意…在生活中耳熟能详的词语，却又是生活中最难实现的字眼。人生路途上的人际交往中，能有多少人能将&lt;strong&gt;诚&lt;/strong&gt;这个字践行到底。对待友情、爱情，对待朋友、同学、亲人、伴侣，我们似乎总在隐藏、在掩盖，至少我是这样。&lt;/p&gt;</summary>
    
    
    
    <category term="有感" scheme="http://example.com/categories/%E6%9C%89%E6%84%9F/"/>
    
    
    <category term="思考" scheme="http://example.com/tags/%E6%80%9D%E8%80%83/"/>
    
    <category term="人情" scheme="http://example.com/tags/%E4%BA%BA%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="http://example.com/2020/09/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2020/09/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2020-09-07T23:13:47.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sequence"><a href="#Sequence" class="headerlink" title="Sequence"></a>Sequence</h1><p>序列，按添加元素的先后顺序保存。具有index属性（即可以通过index来遍历）。</p><p>slice符，x:y（from index x to index y），x、y可负，负数从后记起。 </p><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>可理解为动态数组，元素类型不限。可排序即调用<code>sort()</code>方法</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义list</span></span><br><span class="line">fruit = [<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>]</span><br><span class="line"><span class="comment"># 添加元素（可任意对象）</span></span><br><span class="line">fruit.append(<span class="string">&#x27;hami melon&#x27;</span>)</span><br><span class="line"><span class="comment"># 删除元素</span></span><br><span class="line"><span class="keyword">del</span> fruit[index]</span><br></pre></td></tr></table></figure><h2 id="Tuple"><a href="#Tuple" class="headerlink" title="Tuple"></a>Tuple</h2><p>特点是immutable（不可修改的）。元素可任意，甚至可以嵌套。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义Tuple</span></span><br><span class="line">fruit = (<span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;pear&#x27;</span>)</span><br><span class="line"><span class="comment"># 定义一个元素的Tuple时</span></span><br><span class="line">fruit = (<span class="string">&#x27;banana&#x27;</span>, )</span><br></pre></td></tr></table></figure><h2 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h2><p>存储键值对的数据。key值必须为immutable（不可修改的）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义</span></span><br><span class="line">ab = &#123;</span><br><span class="line">    <span class="string">&#x27;swaroop&#x27;</span> : <span class="string">&#x27;swaroop@swaroopch.com&#x27;</span></span><br><span class="line">    <span class="string">&#x27;Larry&#x27;</span> : <span class="string">&#x27;larry@wall.org&#x27;</span></span><br><span class="line">    <span class="string">&#x27;Matsumoto&#x27;</span> : <span class="string">&#x27;matz@ruby-lang.org&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 遍历</span></span><br><span class="line"><span class="keyword">for</span> name, addr <span class="keyword">in</span> ab.items():</span><br><span class="line">    print(name, addr)</span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line">ab[<span class="string">&#x27;Guido&#x27;</span>] = <span class="string">&#x27;guido@python.org&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h1><p>无序的。仅此而已。提供了in表达式，<code>remove()</code>，位运算等方法。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>在python中变量名和实际存储变量的地址绑定的。仅仅通过变量名赋值，没有复制实际的地址空间。而要通过相应的方式或者使用slice符号复制。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Sequence&quot;&gt;&lt;a href=&quot;#Sequence&quot; class=&quot;headerlink&quot; title=&quot;Sequence&quot;&gt;&lt;/a&gt;Sequence&lt;/h1&gt;&lt;p&gt;序列，按添加元素的先后顺序保存。具有index属性（即可以通过index来遍历）。&lt;/p&gt;
&lt;p&gt;slice符，x:y（from index x to index y），x、y可负，负数从后记起。 &lt;/p&gt;
&lt;h2 id=&quot;List&quot;&gt;&lt;a href=&quot;#List&quot; class=&quot;headerlink&quot; title=&quot;List&quot;&gt;&lt;/a&gt;List&lt;/h2&gt;&lt;p&gt;可理解为动态数组，元素类型不限。可排序即调用&lt;code&gt;sort()&lt;/code&gt;方法&lt;/p&gt;</summary>
    
    
    
    <category term="With Python" scheme="http://example.com/categories/With-Python/"/>
    
    
    <category term="编程语言" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="提炼" scheme="http://example.com/tags/%E6%8F%90%E7%82%BC/"/>
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>零碎</title>
    <link href="http://example.com/2020/09/06/%E9%9B%B6%E7%A2%8E/"/>
    <id>http://example.com/2020/09/06/%E9%9B%B6%E7%A2%8E/</id>
    <published>2020-09-06T22:38:28.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="再次提炼"><a href="#再次提炼" class="headerlink" title="再次提炼"></a>再次提炼</h1><ol><li>函数（function）</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 标识符(<span class="params">参数<span class="number">1</span>, 参数<span class="number">2</span>[=xxx]...</span>):</span> <span class="comment"># *param1,**param2</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    Instruction of the function</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    statement</span><br><span class="line">    [<span class="keyword">return</span> xx]</span><br></pre></td></tr></table></figure><ul><li>动态类型：无需声明返回值的类型</li><li>缺省参数：只能在参数列表的后面部分</li><li>可变参数：<ul><li>param1记录单个参数，类型为Tuple</li><li>param2记录缺省参数，类型为Dictionary<a id="more"></a></li></ul></li></ul><ol start="2"><li>模块（module）</li></ol><ul><li>变量：一些保存模块属性的变量如__main__，__doc__等等</li><li>函数：一系列函数</li><li>文件后缀：.py和.pyc（Python语言将模块编译后的字节码（byte-class），目的就是提高<code>import</code>速度）</li><li>关键词：<code>from...import...</code>导入模块内的一些对象</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;再次提炼&quot;&gt;&lt;a href=&quot;#再次提炼&quot; class=&quot;headerlink&quot; title=&quot;再次提炼&quot;&gt;&lt;/a&gt;再次提炼&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;函数（function）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; 标识符(&lt;span class=&quot;params&quot;&gt;参数&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, 参数&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;[=xxx]...&lt;/span&gt;):&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# *param1,**param2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    Instruction of the function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    &amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; xx]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;动态类型：无需声明返回值的类型&lt;/li&gt;
&lt;li&gt;缺省参数：只能在参数列表的后面部分&lt;/li&gt;
&lt;li&gt;可变参数：&lt;ul&gt;
&lt;li&gt;param1记录单个参数，类型为Tuple&lt;/li&gt;
&lt;li&gt;param2记录缺省参数，类型为Dictionary</summary>
    
    
    
    <category term="With Python" scheme="http://example.com/categories/With-Python/"/>
    
    
    <category term="编程语言" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>蟒蛇出洞</title>
    <link href="http://example.com/2020/09/04/%E8%9F%92%E8%9B%87%E5%87%BA%E6%B4%9E/"/>
    <id>http://example.com/2020/09/04/%E8%9F%92%E8%9B%87%E5%87%BA%E6%B4%9E/</id>
    <published>2020-09-04T22:22:21.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认知"><a href="#认知" class="headerlink" title="认知"></a>认知</h1><p>Python的两个特征：简单和功能强大。大小写严格。缩进严格。定义了一种编程规范，一行一句代码。集成了许多库，可移植性强。脚本语言，动态执行。运行过程：由编译器编译成字节码，再由解释器执行。支持面向过程、面向对象编程，以及<em>函数式</em>编程。主要有两个版本python 3和python 2。易理解。</p><a id="more"></a><h1 id="Sum-UP"><a href="#Sum-UP" class="headerlink" title="Sum UP"></a>Sum UP</h1><ul><li>Installation：<ul><li>编辑器：VSCode、Pycharm（功能强大，操作方便但是<em>体积</em>大）</li><li>不同操作系统解释器不一样？执行命令不一样。Windows is <code>python</code>, while Linux is <code>python3</code> or <code>python2</code>.</li></ul></li><li>First Steps：<ul><li>HelloWorld程序，似乎没有引入包（不像C++/C与Java）<ul><li>print函数自动添加换行，需要在print函数里面更新end变量为<code>&#39; &#39;</code>或其他</li></ul></li></ul></li><li>Basic：<ul><li>字符串（Literal Constants）可用<code>’</code>或<code>&quot;</code>或<code>&#39;&#39;&#39;</code>包围，其中<code>&#39;&#39;&#39;</code>包围多行字符串</li><li>变量是动态类型，即根据给变量初始化的值来存储变量。（不像已学过的语言中先声明变量类型）</li><li>字符串的format方法，可实现字符串参数替换。</li><li>行注解以#开头</li><li>Raw Constant：形式为r(R)’xxxx’的字符串，特点是忽略’xxxx’其中的转义字符（Escape xxx）</li><li>print函数中的字符串连接：以逗号隔开，自动为变量和字符串之间添加空格连接。+号连接（类似Java）</li><li>格式化输出：print函数（暂时先放）</li></ul></li><li>Operators and Expressions：<ul><li>优先级和其他语言(C/C++、Java)差不多</li><li>特殊运算：**（pow）</li></ul></li><li>Control flow：<ul><li>if…elif…else：特点是没有中括号（parentheses），if 表达式 <code>:</code></li><li>for：for循环执行完后增加else语句</li><li>while：增加else语句</li><li>break：for、while语句中执行break语句后，不会执行上述else语句</li><li>continue：没变</li></ul></li></ul><h1 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h1><p>学编程还是重实践。边学边做很重要。善于总结和比较。抓语言特点、特性。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;认知&quot;&gt;&lt;a href=&quot;#认知&quot; class=&quot;headerlink&quot; title=&quot;认知&quot;&gt;&lt;/a&gt;认知&lt;/h1&gt;&lt;p&gt;Python的两个特征：简单和功能强大。大小写严格。缩进严格。定义了一种编程规范，一行一句代码。集成了许多库，可移植性强。脚本语言，动态执行。运行过程：由编译器编译成字节码，再由解释器执行。支持面向过程、面向对象编程，以及&lt;em&gt;函数式&lt;/em&gt;编程。主要有两个版本python 3和python 2。易理解。&lt;/p&gt;</summary>
    
    
    
    <category term="With Python" scheme="http://example.com/categories/With-Python/"/>
    
    
    <category term="编程语言" scheme="http://example.com/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="学习" scheme="http://example.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>八佰</title>
    <link href="http://example.com/2020/09/03/%E5%85%AB%E4%BD%B0/"/>
    <id>http://example.com/2020/09/03/%E5%85%AB%E4%BD%B0/</id>
    <published>2020-09-03T00:00:00.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="艺术效果"><a href="#艺术效果" class="headerlink" title="艺术效果"></a>艺术效果</h1><h2 id="棒"><a href="#棒" class="headerlink" title="棒"></a>棒</h2><p>不仅仅是八佰这部电影，从我的感受来说，现代的电影特别是战争片，无论是镜头的捕捉、切换还是声音衬托的那种氛围，都是震撼的。特别是在电影院观看，是一场真正的视听盛宴。就八佰来说，我印象很深的地方有日本人残害中国人、七月哥中弹身亡等等的画面，表现地特别好。作为既不是专业、也不是业余，偶尔写写影评的白嫖党来说，对这部电影的感受就是一个字——棒。</p><a id="more"></a><h2 id="些许瑕疵"><a href="#些许瑕疵" class="headerlink" title="些许瑕疵"></a>些许瑕疵</h2><p>从我个人的偏好来讲，我认为战争片就应该尽力而为地体现出真实感。然而我对八佰的期望还是偏高了。透过一些小细节，还是可以看出导演为了展现最后镇守四方仓库的八百士兵的英雄气概，采用了一点夸张的手法。我最大的感受就是观影过程中有一丝丝不真实感，感觉有些做法、有些牺牲是不值得的。但是也可能是我感受地不真切。相对而言，我在17年看的血战钢锯岭，我觉得就较为真实，感官上给了我很大的刺激，以至于我现在感受很深刻。</p><h1 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h1><p>我觉得最大的意义就是让和平年代生活在衣食无忧的人们感受战争的残酷，牢记国耻，引发人们对于战争的思索，缅怀为国捐躯的士兵。好好珍惜现在，珍惜每一分、每一秒。真的，和平来之不易。确实换位思考一下，在当时人们渴求和平的愿望，在我们这一代实现了，我们现在的生活不就是他们梦寐以求的一切。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;艺术效果&quot;&gt;&lt;a href=&quot;#艺术效果&quot; class=&quot;headerlink&quot; title=&quot;艺术效果&quot;&gt;&lt;/a&gt;艺术效果&lt;/h1&gt;&lt;h2 id=&quot;棒&quot;&gt;&lt;a href=&quot;#棒&quot; class=&quot;headerlink&quot; title=&quot;棒&quot;&gt;&lt;/a&gt;棒&lt;/h2&gt;&lt;p&gt;不仅仅是八佰这部电影，从我的感受来说，现代的电影特别是战争片，无论是镜头的捕捉、切换还是声音衬托的那种氛围，都是震撼的。特别是在电影院观看，是一场真正的视听盛宴。就八佰来说，我印象很深的地方有日本人残害中国人、七月哥中弹身亡等等的画面，表现地特别好。作为既不是专业、也不是业余，偶尔写写影评的白嫖党来说，对这部电影的感受就是一个字——棒。&lt;/p&gt;</summary>
    
    
    
    <category term="有感" scheme="http://example.com/categories/%E6%9C%89%E6%84%9F/"/>
    
    
    <category term="电影观后感" scheme="http://example.com/tags/%E7%94%B5%E5%BD%B1%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>离家2020</title>
    <link href="http://example.com/2020/08/18/%E7%A6%BB%E5%AE%B62020/"/>
    <id>http://example.com/2020/08/18/%E7%A6%BB%E5%AE%B62020/</id>
    <published>2020-08-18T22:41:00.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="离别"><a href="#离别" class="headerlink" title="离别"></a>离别</h1><h2 id="亲人"><a href="#亲人" class="headerlink" title="亲人"></a>亲人</h2><p>2020，注定是不平凡的一年。不仅仅是这个世界的变化，家庭也遭受变故。奶奶的身体健康每况愈下，外公外婆逐日滋生的孤独感都非常影响我的心情。离别对我来说可能造成的影响不大，可是亲人遭受的离别痛苦难以想象。<a id="more"></a>由于住在外公外婆家，自己一去学校，相当于身边少了一个天天和他们聊天的外孙，随着爸妈去照顾奶奶，两位老人孤独感倍增。一想到他们会难受，我也不幸免。只能说每周尽量给出自己的关心，多花点时间陪陪亲人。</p><p>我一走老爸就少了一个天天陪他打球、游泳的伴，老妈就少了一个帮他做事的儿子。怎么说，有点不舍，特别是当写下这几个字眼的时候。</p><h1 id="朋友"><a href="#朋友" class="headerlink" title="朋友"></a>朋友</h1><p>一转眼又要隔半年，还好上次和同学去玩了，留下了美好的回忆。确实，说到交流还是和朋友的交流最坦诚。无论是生活的方方面面还是学习上的磕磕碰碰，有朋友分享就有了发泄的渠道。真的很享受和朋友在一起的时光。最大的遗憾就是今年由于疫情还有作为班长的无动于衷，毕业两年了，都没有一次同学聚会。哪怕是一次饭局都没有，我确实该好好反省。我觉得我因为朋友改变了许多，应该是学到了许多。还是一句话，<strong>这份友情我必珍重！</strong></p><h1 id="感慨"><a href="#感慨" class="headerlink" title="感慨"></a>感慨</h1><p>人生中要面临许多离别。这或许是我第一次记录在案的感慨。离别对应着不舍，但是同时也有希望。面对阔别7个月的学校，怎么说还是有点想念。只不过离别盖过了希望。真的只想说好好珍惜和亲人、朋友在一起的时光。留给你陪伴的时间或许真的不多了。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;离别&quot;&gt;&lt;a href=&quot;#离别&quot; class=&quot;headerlink&quot; title=&quot;离别&quot;&gt;&lt;/a&gt;离别&lt;/h1&gt;&lt;h2 id=&quot;亲人&quot;&gt;&lt;a href=&quot;#亲人&quot; class=&quot;headerlink&quot; title=&quot;亲人&quot;&gt;&lt;/a&gt;亲人&lt;/h2&gt;&lt;p&gt;2020，注定是不平凡的一年。不仅仅是这个世界的变化，家庭也遭受变故。奶奶的身体健康每况愈下，外公外婆逐日滋生的孤独感都非常影响我的心情。离别对我来说可能造成的影响不大，可是亲人遭受的离别痛苦难以想象。</summary>
    
    
    
    <category term="有感" scheme="http://example.com/categories/%E6%9C%89%E6%84%9F/"/>
    
    
    <category term="人情" scheme="http://example.com/tags/%E4%BA%BA%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>庐山之行</title>
    <link href="http://example.com/2020/08/16/%E5%BA%90%E5%B1%B1%E4%B9%8B%E8%A1%8C/"/>
    <id>http://example.com/2020/08/16/%E5%BA%90%E5%B1%B1%E4%B9%8B%E8%A1%8C/</id>
    <published>2020-08-16T10:29:35.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="伊始"><a href="#伊始" class="headerlink" title="伊始"></a>伊始</h1><p>去庐山的想法来自和gls第一次去武功山时的交流，考虑到当时的条件便推到了以后。游玩宜春后，就有打算去庐山。当时邀请朋友时，内心有点失落。主要是自己邀请的态度不太行，平时交流的不太多。导致大家都有拒绝的想法。但是没想到最后还是一共有9位小伙伴。只能说是多亏了lx。反思一下还是自己的交流圈太小了。旅行前做的准备还是比较充足的，主要是借鉴了前几次出门的经验。这次就是预算超支了，其他的都还行。<a id="more"></a></p><h1 id="友情与爱情"><a href="#友情与爱情" class="headerlink" title="友情与爱情"></a>友情与爱情</h1><p>可以说这次旅行最大的收获就是友情吧。这次是敞开心扉了和朋友们交流，主要是进一步地了解了女生们。以前读书的时候可以说是仅仅停留在读书的层面。这次zy是真的让我刮目相看，以前印象里可爱的、呆呆的女生变成了精明的、独立、善解人意的女生，我想这也是lx为什么和zy关系这么好的原因。zjq在我印象里一直都差不多，就是相对而言较宅，有自己的看法，善于倾听。lx依然是一个强硬、爱交流、考虑周到、坚强有毅力，高情商，但有时又有点执拗女孩。gz淑女一个，言行举止都很平和。lm——行走的知识库，很自立，喜欢提前规划有点像我。有这样一群朋友确实是我的荣幸。<strong>我必将珍惜！</strong></p><p>爱情，自己确实有自己独到的见解。但是毕竟母胎solo，经验为0。这次仅和同学浅浅的交流，就明白这条路很深。这让我明白还有很长的路要走。遇到这方面的问题，去请教朋友确实没错。在对待爱情这方面，必须小心谨慎。</p><h1 id="庐山印象"><a href="#庐山印象" class="headerlink" title="庐山印象"></a>庐山印象</h1><p>庐山给我最大的感受就是凉爽，暑期去度假确实特别好。其次就是红色文化，曾经国共两党、党的领导人都在这里留下了印记。牯岭镇建设的特别好。游山玩水的好去处。杉树林有些阔绰感，三宝树震撼。黄龙塘、乌龙谭挺不错。含鄱口的日出有点小失落，没看见太阳。三叠泉的瀑布好看。庐山瀑布真不戳。总的来说，庐山是一个暑期避暑，游山玩水的好去处，来江西还是要来庐山。</p><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><p>可以说，唯一的不愉快就是和司机师傅的交流。刚开始觉得这服务其实还行，行程全部给我们安排好了，接送也比较方便。就是可能看日出的安排上有点不爽，不过我换位思考一下，其实也很难安排。最后还是选择了妥协。就是以后如果自由行最好还是考虑周到一点，能省钱的地方还是省。</p><h1 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h1><p>算是一次独立地出行，留下了很多美好的回忆。也增进了同学间的友情，定期这样的聚会游玩也是维持同学关系的纽带。多和同学交流，增进感情必要性还是很大。虽然有人情社会的考虑，但是还是看重这份友情。知音难觅，所以且行且珍惜。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;伊始&quot;&gt;&lt;a href=&quot;#伊始&quot; class=&quot;headerlink&quot; title=&quot;伊始&quot;&gt;&lt;/a&gt;伊始&lt;/h1&gt;&lt;p&gt;去庐山的想法来自和gls第一次去武功山时的交流，考虑到当时的条件便推到了以后。游玩宜春后，就有打算去庐山。当时邀请朋友时，内心有点失落。主要是自己邀请的态度不太行，平时交流的不太多。导致大家都有拒绝的想法。但是没想到最后还是一共有9位小伙伴。只能说是多亏了lx。反思一下还是自己的交流圈太小了。旅行前做的准备还是比较充足的，主要是借鉴了前几次出门的经验。这次就是预算超支了，其他的都还行。</summary>
    
    
    
    <category term="游记" scheme="http://example.com/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游玩" scheme="http://example.com/tags/%E6%B8%B8%E7%8E%A9/"/>
    
  </entry>
  
  <entry>
    <title>同学聚会</title>
    <link href="http://example.com/2020/08/12/%E5%90%8C%E5%AD%A6%E8%81%9A%E4%BC%9A/"/>
    <id>http://example.com/2020/08/12/%E5%90%8C%E5%AD%A6%E8%81%9A%E4%BC%9A/</id>
    <published>2020-08-12T22:51:41.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="呼之而来"><a href="#呼之而来" class="headerlink" title="呼之而来"></a>呼之而来</h1><p>作为一个朋友，一次邀请能够做到舍弃任何事奔赴。有这样的朋友是一种荣幸，但是这样的朋友却少之又少。收到L邀请是幸运的，作为朋友我唯一能做的就是赴约，毕竟邀请了你算是一种对你的尊重。我太渴望这种尊重了，或许我身边很缺少这种感觉。我对自己这种行为其实毫不否定地赞同，毕竟相聚很少，工作和学习时间很多。<a id="more"></a></p><h1 id="关系都是聚起来的"><a href="#关系都是聚起来的" class="headerlink" title="关系都是聚起来的"></a>关系都是聚起来的</h1><p>关键点是聚，虽然平时生活联系不太大，但是定期的聚会就很能促进感情。确实今天和他们交流很舒服，更深层次的了解了同学。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;呼之而来&quot;&gt;&lt;a href=&quot;#呼之而来&quot; class=&quot;headerlink&quot; title=&quot;呼之而来&quot;&gt;&lt;/a&gt;呼之而来&lt;/h1&gt;&lt;p&gt;作为一个朋友，一次邀请能够做到舍弃任何事奔赴。有这样的朋友是一种荣幸，但是这样的朋友却少之又少。收到L邀请是幸运的，作为朋友我唯一能做的就是赴约，毕竟邀请了你算是一种对你的尊重。我太渴望这种尊重了，或许我身边很缺少这种感觉。我对自己这种行为其实毫不否定地赞同，毕竟相聚很少，工作和学习时间很多。</summary>
    
    
    
    <category term="有感" scheme="http://example.com/categories/%E6%9C%89%E6%84%9F/"/>
    
    
    <category term="聚会" scheme="http://example.com/tags/%E8%81%9A%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>实训日记-完结</title>
    <link href="http://example.com/2020/08/10/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E5%AE%8C%E7%BB%93/"/>
    <id>http://example.com/2020/08/10/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E5%AE%8C%E7%BB%93/</id>
    <published>2020-08-10T08:34:18.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><p>从7-13到8-8日，两周课程，11天开发。总的来说，这次实训还是遗憾中带点小幸运。遗憾体现在实训做的项目一般般，甚至是不合格。幸运在于遇到了两位热情的小伙伴。实训说起来还是收获挺多的。<a id="more"></a></p><h1 id="遗憾"><a href="#遗憾" class="headerlink" title="遗憾"></a>遗憾</h1><p>项目是一个机票搜索及智能推荐的Web项目。主要需求是Web+大数据。对于我们来说，java薄弱的基础，对Web项目一知半解，可能是这次项目的失败的预兆。还有我的组织能力8太行，对项目没有话语权，所以我意识到必须强化自己的技术能力。对技术能力最大的提升，应该是项目实践。学知识有一说一动手是关键，看多少书都没用。做不出东西还是没有。然后大数据这块，是交给我做，我的重心全部落在机器学习这块，答辩的时候才意识到，其实大数据还是有很多东西可做，不一定要用人工智能。当时大数据这块没有思路的时候，也没用问问老师，这确实是我的问题。</p><h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><p>首先是公司，上程公司给我的印象就是老师讲课简洁、明炼。确实能做到一句话解决的问题，为什么要婆婆索索，这让我决定以后训练，不要一直犹豫，直接一句话表达。然后就是对项目的把控，每做一件事，完成一项任务都要完全把控，这样才能做到有效的计划。遇到了两个朋友，真的难能可贵地一起学习、一起做项目，每天开例会。所以我觉得还是有必要去聚聚，毕竟知音难觅、朋友难交。最后就是技术的积累，java这块有做一个博客项目的想法，大数据算是一个了解。大数据这块还要写个总结吧，总结一下学到的知识，毕竟知识这个东西，不用就会抛掷脑后。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;完结&quot;&gt;&lt;a href=&quot;#完结&quot; class=&quot;headerlink&quot; title=&quot;完结&quot;&gt;&lt;/a&gt;完结&lt;/h1&gt;&lt;p&gt;从7-13到8-8日，两周课程，11天开发。总的来说，这次实训还是遗憾中带点小幸运。遗憾体现在实训做的项目一般般，甚至是不合格。幸运在于遇到了两位热情的小伙伴。实训说起来还是收获挺多的。</summary>
    
    
    
    <category term="实训日记" scheme="http://example.com/categories/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="实训" scheme="http://example.com/tags/%E5%AE%9E%E8%AE%AD/"/>
    
    <category term="项目" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>实训日记-摸到门路</title>
    <link href="http://example.com/2020/08/04/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E6%91%B8%E5%88%B0%E9%97%A8%E8%B7%AF/"/>
    <id>http://example.com/2020/08/04/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E6%91%B8%E5%88%B0%E9%97%A8%E8%B7%AF/</id>
    <published>2020-08-04T23:06:49.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="交流是学习的助推剂"><a href="#交流是学习的助推剂" class="headerlink" title="交流是学习的助推剂"></a>交流是学习的助推剂</h1><p>要说今天开发程序最大的收获，还是来自会泓的指导。前端的结构一指明，问题一解答。陌生的前端代码变得熟悉起来。确实无论是学习新东西、还是开发项目遇到的问题，能和别人交流往往能有意想不到的收获。或许正是因为有学习的伴，才会出现“学霸寝室”的现象。所以继续扩大交流圈，不要害怕别人非议。你就是你自己，收获很多，牺牲很少，何乐而不为。<a id="more"></a></p><h1 id="紧张、迫切"><a href="#紧张、迫切" class="headerlink" title="紧张、迫切"></a>紧张、迫切</h1><p>不得不说，接近DDL，内心还是有焦虑感。一想到还有项目没完成，再过两天就答辩了。内心很慌。所以为了尽量消除这种紧张感。我决定以后尽量消除这种压迫感。一个方法就是——提前完成任务。前期的付出，迎来后期的舒服。这样心情或许舒畅许多。</p><p><strong>废话不多说，早早进入梦乡，准备迎接明天的挑战</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;交流是学习的助推剂&quot;&gt;&lt;a href=&quot;#交流是学习的助推剂&quot; class=&quot;headerlink&quot; title=&quot;交流是学习的助推剂&quot;&gt;&lt;/a&gt;交流是学习的助推剂&lt;/h1&gt;&lt;p&gt;要说今天开发程序最大的收获，还是来自会泓的指导。前端的结构一指明，问题一解答。陌生的前端代码变得熟悉起来。确实无论是学习新东西、还是开发项目遇到的问题，能和别人交流往往能有意想不到的收获。或许正是因为有学习的伴，才会出现“学霸寝室”的现象。所以继续扩大交流圈，不要害怕别人非议。你就是你自己，收获很多，牺牲很少，何乐而不为。</summary>
    
    
    
    <category term="实训日记" scheme="http://example.com/categories/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="实训" scheme="http://example.com/tags/%E5%AE%9E%E8%AE%AD/"/>
    
    <category term="项目" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>实训日记-匆忙</title>
    <link href="http://example.com/2020/08/03/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E5%8C%86%E5%BF%99/"/>
    <id>http://example.com/2020/08/03/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E5%8C%86%E5%BF%99/</id>
    <published>2020-08-03T23:11:01.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="仿佛伊始"><a href="#仿佛伊始" class="headerlink" title="仿佛伊始"></a>仿佛伊始</h1><p>项目开发本身可能确实不难，但是可能难在团队协作上。现在的状况就是打算用别人提供的模板了，差不多修修改改，在他们的基础上寻求创新。这次实训可能水成了。我的大学生涯太多太多水了，重要的锻炼实践能力的课设水了整整三个学期，支教没有达到实际目标。可能项目经历几乎为0，所以不能水下去了，必须正式地去学习，去把项目做好，为什么总是在最后时刻才醒悟…<a id="more"></a></p><h1 id="回到项目"><a href="#回到项目" class="headerlink" title="回到项目"></a>回到项目</h1><p>做好一个项目，难就难在日复一日学习的坚持，还有最最重要的实践。可以说学习任何东西，实践是基础。既然已经懂得了这个道理，那就不难完成一个项目。然而现状就是这样，这个项目有点紧急。几乎从0开始，3天时间，极限。所以时间多回归在项目上，尽量减少在娱乐上所花的时间。</p><h1 id="严谨"><a href="#严谨" class="headerlink" title="严谨"></a>严谨</h1><p>今天和宇滨的交流就表现得很不理智、考虑不周全。因为没有实现去了解所需的数据的类型和格式。导致一个下午的爬虫爬取了无效的数据。所以无论什么事，遇到了要处理，就一定停下来，带着头脑去思考，而不是一味地迁就，一味地去最低限度去接受。而是要以最高姿态要求自己。</p><h1 id="意志"><a href="#意志" class="headerlink" title="意志"></a>意志</h1><p>意志力还是要加强，最近表现得还不错。我就是我自己的神在我活的地方。</p><p><strong>我和我骄傲的倔强</strong>！</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;仿佛伊始&quot;&gt;&lt;a href=&quot;#仿佛伊始&quot; class=&quot;headerlink&quot; title=&quot;仿佛伊始&quot;&gt;&lt;/a&gt;仿佛伊始&lt;/h1&gt;&lt;p&gt;项目开发本身可能确实不难，但是可能难在团队协作上。现在的状况就是打算用别人提供的模板了，差不多修修改改，在他们的基础上寻求创新。这次实训可能水成了。我的大学生涯太多太多水了，重要的锻炼实践能力的课设水了整整三个学期，支教没有达到实际目标。可能项目经历几乎为0，所以不能水下去了，必须正式地去学习，去把项目做好，为什么总是在最后时刻才醒悟…</summary>
    
    
    
    <category term="实训日记" scheme="http://example.com/categories/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="实训" scheme="http://example.com/tags/%E5%AE%9E%E8%AE%AD/"/>
    
    <category term="项目" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>实训日记-状态迷离</title>
    <link href="http://example.com/2020/08/02/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E7%8A%B6%E6%80%81%E8%BF%B7%E7%A6%BB/"/>
    <id>http://example.com/2020/08/02/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0-%E7%8A%B6%E6%80%81%E8%BF%B7%E7%A6%BB/</id>
    <published>2020-08-02T22:56:29.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于项目"><a href="#关于项目" class="headerlink" title="关于项目"></a>关于项目</h1><p>预估目前应该是没什么进展，爬虫老哥划水，已经黑名单。另外两个给力的队友也想水过去。我的机器学习部分，其实也没有什么太大的进展。果然没有底层知识、基础，使用Spark-ml还是有点吃力。今天又有点不在状态，对项目有点逃避。接下来应该是最后冲刺阶段了，把握好时间，加油。<a id="more"></a></p><h1 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h1><p>今天和弟弟讲了讲编程入门，感觉自己掌握的知识还挺多的。只是暂时没有表现出来，还有关于写日记、写博客还是挺有用的，感觉这段时间的表达能力得到了提升。其次确实想弟弟把高中生活过好。自己的高中，确实有点不尽如人意。有一说一，高中在我脑海里留下的印象其实不多。叔叔他们也回深圳了，最近没什么事了，那就全心投入到项目里来。这里给自己定一个时间表。</p><table><thead><tr><th align="center">时间</th><th align="center">具体安排</th></tr></thead><tbody><tr><td align="center">8:00~11:30</td><td align="center">项目开发</td></tr><tr><td align="center">2:00~4:30(可延后一个小时)</td><td align="center">项目开发</td></tr><tr><td align="center">7:00~10:00</td><td align="center">项目开发</td></tr><tr><td align="center">10:30~11:00(可适当延后)</td><td align="center">写Blog</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;关于项目&quot;&gt;&lt;a href=&quot;#关于项目&quot; class=&quot;headerlink&quot; title=&quot;关于项目&quot;&gt;&lt;/a&gt;关于项目&lt;/h1&gt;&lt;p&gt;预估目前应该是没什么进展，爬虫老哥划水，已经黑名单。另外两个给力的队友也想水过去。我的机器学习部分，其实也没有什么太大的进展。果然没有底层知识、基础，使用Spark-ml还是有点吃力。今天又有点不在状态，对项目有点逃避。接下来应该是最后冲刺阶段了，把握好时间，加油。</summary>
    
    
    
    <category term="实训日记" scheme="http://example.com/categories/%E5%AE%9E%E8%AE%AD%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="实训" scheme="http://example.com/tags/%E5%AE%9E%E8%AE%AD/"/>
    
    <category term="项目" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>携游武功山</title>
    <link href="http://example.com/2020/08/01/%E6%90%BA%E6%B8%B8%E6%AD%A6%E5%8A%9F%E5%B1%B1/"/>
    <id>http://example.com/2020/08/01/%E6%90%BA%E6%B8%B8%E6%AD%A6%E5%8A%9F%E5%B1%B1/</id>
    <published>2020-08-01T21:24:16.000Z</published>
    <updated>2020-09-23T01:45:33.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="武功山印象"><a href="#武功山印象" class="headerlink" title="武功山印象"></a>武功山印象</h1><p>“云中草原”——最大的看点就是植被，山上植被不高，视野很开阔，在云朵的衬托下，山峰显得额外的青耸。自然景观也有天成的怪石，山峰等等。</p><p>“无限风光在险峰”——陡峭、看不到尽头的山路，台阶短又高。有一说一，爬上去就是累。</p><p>“日新月异”——最小的时候5岁，到至今，至少也有6次了，一次又一次的变化确实挺大。从没有修完石台阶，到一道直通金顶，从草地露营到帐篷区露宿，玻璃栈道、吊桥、玻璃幕台从无到有，都是我所经历的。<a id="more"></a></p><p><img src="/images/20200801.jpg"></p><h1 id="这次旅行"><a href="#这次旅行" class="headerlink" title="这次旅行"></a>这次旅行</h1><p>一路顺风。欣赏了美景同时收获了快乐。我始终作为一个Shell，帮助其他人，给出我的想法和建议。体力还是跟得上，一路上不累，或许这次最有收获的就是拍的照吧。第一次有意识地去拍照，拍的照片感觉还行。好景不常在，好花不常开，所以保持一颗捕获瞬间的心，是有必要的。</p><h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><p>人际关系，表达能力。和侄子、堂弟处好关系没问题，主要是可以多接触网络上的表达，多学习名人大师是如何活跃气氛，收割人气的。其次就是对一件事情的表达，清晰完整，在以后的生活中多去学习。</p><p>PS：可以去学习一下摄影艺术哦。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;武功山印象&quot;&gt;&lt;a href=&quot;#武功山印象&quot; class=&quot;headerlink&quot; title=&quot;武功山印象&quot;&gt;&lt;/a&gt;武功山印象&lt;/h1&gt;&lt;p&gt;“云中草原”——最大的看点就是植被，山上植被不高，视野很开阔，在云朵的衬托下，山峰显得额外的青耸。自然景观也有天成的怪石，山峰等等。&lt;/p&gt;
&lt;p&gt;“无限风光在险峰”——陡峭、看不到尽头的山路，台阶短又高。有一说一，爬上去就是累。&lt;/p&gt;
&lt;p&gt;“日新月异”——最小的时候5岁，到至今，至少也有6次了，一次又一次的变化确实挺大。从没有修完石台阶，到一道直通金顶，从草地露营到帐篷区露宿，玻璃栈道、吊桥、玻璃幕台从无到有，都是我所经历的。</summary>
    
    
    
    <category term="游记" scheme="http://example.com/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游玩" scheme="http://example.com/tags/%E6%B8%B8%E7%8E%A9/"/>
    
  </entry>
  
</feed>
